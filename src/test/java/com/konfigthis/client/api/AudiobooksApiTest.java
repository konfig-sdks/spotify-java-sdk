/*
 * Spotify Web API
 * You can use Spotify's Web API to discover music and podcasts, manage your Spotify library, control audio playback, and much more. Browse our available Web API endpoints using the sidebar at left, or via the navigation bar on top of this page on smaller screens.  In order to make successful Web API requests your app will need a valid access token. One can be obtained through <a href=\"https://developer.spotify.com/documentation/general/guides/authorization-guide/\">OAuth 2.0</a>.  The base URI for all Web API requests is `https://api.spotify.com/v1`.  Need help? See our <a href=\"https://developer.spotify.com/documentation/web-api/guides/\">Web API guides</a> for more information, or visit the <a href=\"https://community.spotify.com/t5/Spotify-for-Developers/bd-p/Spotify_Developer\">Spotify for Developers community forum</a> to ask questions and connect with other developers. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.AudiobookObject;
import com.konfigthis.client.model.AudiobooksGetSeveralResponse;
import com.konfigthis.client.model.PagingSimplifiedAudiobookObject;
import com.konfigthis.client.model.PagingSimplifiedChapterObject;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AudiobooksApi
 */
@Disabled
public class AudiobooksApiTest {

    private static AudiobooksApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new AudiobooksApi(apiClient);
    }

    /**
     * Check User&#39;s Saved Audiobooks 
     *
     * Check if one or more audiobooks are already saved in the current Spotify user&#39;s library. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkUserSavedTest() throws ApiException {
        String ids = null;
        List<Boolean> response = api.checkUserSaved(ids)
                .execute();
        // TODO: test validations
    }

    /**
     * Get an Audiobook 
     *
     * Get Spotify catalog information for a single audiobook. Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCatalogInfoTest() throws ApiException {
        String id = null;
        String market = null;
        AudiobookObject response = api.getCatalogInfo(id)
                .market(market)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Audiobook Chapters 
     *
     * Get Spotify catalog information about an audiobook&#39;s chapters. Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getChaptersByIdTest() throws ApiException {
        String id = null;
        String market = null;
        Integer limit = null;
        Integer offset = null;
        PagingSimplifiedChapterObject response = api.getChaptersById(id)
                .market(market)
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Get Several Audiobooks 
     *
     * Get Spotify catalog information for several audiobooks identified by their Spotify IDs. Audiobooks are only available within the US, UK, Canada, Ireland, New Zealand and Australia markets. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSeveralTest() throws ApiException {
        String ids = null;
        String market = null;
        AudiobooksGetSeveralResponse response = api.getSeveral(ids)
                .market(market)
                .execute();
        // TODO: test validations
    }

    /**
     * Get User&#39;s Saved Audiobooks 
     *
     * Get a list of the audiobooks saved in the current Spotify user&#39;s &#39;Your Music&#39; library. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSavedTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        PagingSimplifiedAudiobookObject response = api.listSaved()
                .limit(limit)
                .offset(offset)
                .execute();
        // TODO: test validations
    }

    /**
     * Remove User&#39;s Saved Audiobooks 
     *
     * Remove one or more audiobooks from the Spotify user&#39;s library. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeFromLibraryTest() throws ApiException {
        String ids = null;
        api.removeFromLibrary(ids)
                .execute();
        // TODO: test validations
    }

    /**
     * Save Audiobooks for Current User 
     *
     * Save one or more audiobooks to the current Spotify user&#39;s library. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void saveCurrentUserLibraryTest() throws ApiException {
        String ids = null;
        api.saveCurrentUserLibrary(ids)
                .execute();
        // TODO: test validations
    }

}
